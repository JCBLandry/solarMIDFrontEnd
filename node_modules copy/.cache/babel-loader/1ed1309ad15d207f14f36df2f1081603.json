{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Documents\\\\GitHub\\\\solarMIDFrontEnd\\\\solar-mid\\\\src\\\\components\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\n\nconst Login = props => {\n  const [credentials, setCredentials] = useState({\n    credentials: {\n      username: '',\n      password: ''\n    }\n  }); // make a post request to retrieve a token from the api\n  // when you have handled the token, navigate to the BubblePage route\n\n  const handleChange = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const loginHandler = e => {\n    e.preventDefault();\n    axiosWithAuth().post('/api/login', credentials).then(res => window.localStorage.setItem('token', res.data.payload), props.history.push('/itemPage')).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Welcome to the Bubble App!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Login:\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: loginHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: credentials.username,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: credentials.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Justin/Documents/GitHub/solarMIDFrontEnd/solar-mid/src/components/Login.js"],"names":["React","useState","axiosWithAuth","Login","props","credentials","setCredentials","username","password","handleChange","e","target","name","value","loginHandler","preventDefault","post","then","res","window","localStorage","setItem","data","payload","history","push","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,aAAR,QAA4B,wBAA5B;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC;AAC7CI,IAAAA,WAAW,EAAE;AACXE,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC;AADgC,GAAD,CAA9C,CADqB,CAQrB;AACA;;AAEA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBJ,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AAEb,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFb,KAAD,CAAd;AAID,GALD;;AAQA,QAAMC,YAAY,GAAGJ,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAb,IAAAA,aAAa,GACVc,IADH,CACQ,YADR,EACsBX,WADtB,EAEGY,IAFH,CAEQC,GAAG,IACPC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCH,GAAG,CAACI,IAAJ,CAASC,OAA9C,CAHJ,EAIInB,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,WAAnB,CAJJ,EAMGC,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAQD,GAVD;;AAWA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,IAAA,QAAQ,EAAEb,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAET,WAAW,CAACE,QAHrB;AAIE,IAAA,QAAQ,EAAEE,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEJ,WAAW,CAACG,QAHrB;AAIE,IAAA,QAAQ,EAAEC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAfF,CAHF,CADF;AAuBD,CArDD;;AAuDA,eAAeN,KAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport {axiosWithAuth} from '../utils/axiosWithAuth'\r\n\r\n\r\nconst Login = props => {\r\n  const [credentials, setCredentials] = useState({\r\n    credentials: {\r\n      username: '',\r\n      password: '',\r\n    }\r\n  })\r\n\r\n  // make a post request to retrieve a token from the api\r\n  // when you have handled the token, navigate to the BubblePage route\r\n\r\n  const handleChange = e => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  const loginHandler = e => {\r\n    e.preventDefault();\r\n    axiosWithAuth()\r\n      .post('/api/login', credentials)\r\n      .then(res => \r\n        window.localStorage.setItem('token', res.data.payload),\r\n        props.history.push('/itemPage')\r\n      )\r\n      .catch(err => console.log(err))\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <h1>Welcome to the Bubble App!</h1>\r\n      <h2>Login:</h2>\r\n      <form onSubmit={loginHandler}>\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          name='username'\r\n          value={credentials.username}\r\n          onChange={handleChange}\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name='password'\r\n          value={credentials.password}\r\n          onChange={handleChange}\r\n        />\r\n        <button>Login</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}