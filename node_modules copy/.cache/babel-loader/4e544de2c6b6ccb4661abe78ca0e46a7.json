{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Documents\\\\GitHub\\\\solarMIDFrontEnd\\\\solar-mid\\\\src\\\\components\\\\Item.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Pack } from \"@potion/layout\";\nimport { Svg, Circle } from \"@potion/element\";\n\nconst Items = ({\n  colors\n}) => {\n  const [itemData, setItemData] = useState([]);\n  useEffect(() => {\n    const generateItemData = items.map((_, i) => ({\n      value: Math.floor(Math.random() * (items.length * 2)) + 1,\n      key: `${i + 1}`\n    }));\n    setItemData(generateItemData);\n  }, [colors]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bubble-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"bubbles\"), /*#__PURE__*/React.createElement(Svg, {\n    width: 400,\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pack, {\n    data: {\n      children: bubbleData\n    },\n    sum: datum => datum.value,\n    size: [400, 400],\n    includeRoot: false,\n    nodeEnter: d => ({ ...d,\n      r: 0\n    }),\n    animate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, nodes => nodes.map(({\n    x,\n    y,\n    r,\n    key\n  }, i) => {\n    if (i < items.length) {\n      return /*#__PURE__*/React.createElement(Circle, {\n        key: key,\n        cx: x,\n        cy: y,\n        r: r,\n        fill: items[i].code.hex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      });\n    }\n\n    return null;\n  }).filter(v => v))));\n};\n\nexport default Item;","map":{"version":3,"sources":["C:/Users/Justin/Documents/GitHub/solarMIDFrontEnd/solar-mid/src/components/Item.js"],"names":["React","useState","useEffect","Pack","Svg","Circle","Items","colors","itemData","setItemData","generateItemData","items","map","_","i","value","Math","floor","random","length","key","children","bubbleData","datum","d","r","nodes","x","y","code","hex","filter","v","Item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,gBAAgB,GAAGC,KAAK,CAACC,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,MAAW;AAC5CC,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,KAAK,CAACQ,MAAN,GAAe,CAAhC,CAAX,IAAiD,CADZ;AAE5CC,MAAAA,GAAG,EAAG,GAAEN,CAAC,GAAG,CAAE;AAF8B,KAAX,CAAV,CAAzB;AAIAL,IAAAA,WAAW,CAACC,gBAAD,CAAX;AACD,GANQ,EAMN,CAACH,MAAD,CANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAE,GAAZ;AAAiB,IAAA,MAAM,EAAE,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJc,MAAAA,QAAQ,EAAEC;AADN,KADR;AAIE,IAAA,GAAG,EAAEC,KAAK,IAAIA,KAAK,CAACR,KAJtB;AAKE,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,CALR;AAME,IAAA,WAAW,EAAE,KANf;AAOE,IAAA,SAAS,EAAES,CAAC,KAAK,EAAE,GAAGA,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAAL,CAPd;AAQE,IAAA,OAAO,MART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGC,KAAK,IACJA,KAAK,CACFd,GADH,CACO,CAAC;AAAEe,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQH,IAAAA,CAAR;AAAWL,IAAAA;AAAX,GAAD,EAAmBN,CAAnB,KAAyB;AAC5B,QAAIA,CAAC,GAAGH,KAAK,CAACQ,MAAd,EAAsB;AACpB,0BACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEC,GADP;AAEE,QAAA,EAAE,EAAEO,CAFN;AAGE,QAAA,EAAE,EAAEC,CAHN;AAIE,QAAA,CAAC,EAAEH,CAJL;AAKE,QAAA,IAAI,EAAEd,KAAK,CAACG,CAAD,CAAL,CAASe,IAAT,CAAcC,GALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;AACD,WAAO,IAAP;AACD,GAdH,EAeGC,MAfH,CAeUC,CAAC,IAAIA,CAff,CAXJ,CADF,CAFF,CADF;AAoCD,CA9CD;;AAgDA,eAAeC,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Pack } from \"@potion/layout\";\r\nimport { Svg, Circle } from \"@potion/element\";\r\n\r\nconst Items = ({ colors }) => {\r\n  const [itemData, setItemData] = useState([]);\r\n  useEffect(() => {\r\n    const generateItemData = items.map((_, i) => ({\r\n      value: Math.floor(Math.random() * (items.length * 2)) + 1,\r\n      key: `${i + 1}`\r\n    }));\r\n    setItemData(generateItemData);\r\n  }, [colors]);\r\n\r\n  return (\r\n    <div className=\"bubble-wrap\">\r\n      <p>bubbles</p>\r\n      <Svg width={400} height={400}>\r\n        <Pack\r\n          data={{\r\n            children: bubbleData\r\n          }}\r\n          sum={datum => datum.value}\r\n          size={[400, 400]}\r\n          includeRoot={false}\r\n          nodeEnter={d => ({ ...d, r: 0 })}\r\n          animate\r\n        >\r\n          {nodes =>\r\n            nodes\r\n              .map(({ x, y, r, key }, i) => {\r\n                if (i < items.length) {\r\n                  return (\r\n                    <Circle\r\n                      key={key}\r\n                      cx={x}\r\n                      cy={y}\r\n                      r={r}\r\n                      fill={items[i].code.hex}\r\n                    />\r\n                  );\r\n                }\r\n                return null;\r\n              })\r\n              .filter(v => v)\r\n          }\r\n        </Pack>\r\n      </Svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;"]},"metadata":{},"sourceType":"module"}