{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Documents\\\\GitHub\\\\solarMIDFrontEnd\\\\solar-mid\\\\src\\\\components\\\\ItemPage.js\";\nimport React from 'react';\nimport Item from '../components/Item';\n\nconst ItemPage = () => {\n  // Try to think through what state you'll need for this app before starting. Then build out\n  // the state properties here.\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \n  // side effect in a component, you want to think about which state and/or props it should\n  // sync up with, if any.\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"Header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Cerroneth Magic Item Database\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ItemPage; // import React, { Component } from 'react';\n// import Item from './Item'\n// import ItemList from './ItemList.js'\n// class ItemPage extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       items: []\n//     };\n//   }\n//   componentDidMount() {\n//     this.getItems('http://localhost:5000/api/magicitems');\n//   }\n//   getItems = URL => {\n//     // We are calling an API to fetch some data from the api\n//     // We then take that data and resolve it our state.\n//     fetch(URL)\n//       .then(res => {\n//         return res.json();\n//       })\n//       .then(data => {\n//         this.setState({ items: data.results });\n//       })\n//       .catch(err => {\n//         throw new Error(err);\n//       });\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1 className=\"Header\">Solar Magic Item Database</h1>\n//         <ItemList  items = {this.state.items}/>\n//       </div>\n//     );\n//   }\n// }\n// export default ItemPage;","map":{"version":3,"sources":["C:/Users/Justin/Documents/GitHub/solarMIDFrontEnd/solar-mid/src/components/ItemPage.js"],"names":["React","Item","ItemPage"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB;AACA;AAEA;AACA;AACA;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD,CAhBD;;AAkBA,eAAeA,QAAf,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["\r\nimport React from 'react';\r\nimport Item from '../components/Item'\r\n\r\nconst ItemPage = () => {\r\n  // Try to think through what state you'll need for this app before starting. Then build out\r\n  // the state properties here.\r\n\r\n  // Fetch characters from the API in an effect hook. Remember, anytime you have a \r\n  // side effect in a component, you want to think about which state and/or props it should\r\n  // sync up with, if any.\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"Header\">Cerroneth Magic Item Database</h1>\r\n      <div>\r\n        <Item />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemPage;\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import Item from './Item'\r\n// import ItemList from './ItemList.js'\r\n\r\n// class ItemPage extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       items: []\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.getItems('http://localhost:5000/api/magicitems');\r\n//   }\r\n\r\n//   getItems = URL => {\r\n//     // We are calling an API to fetch some data from the api\r\n//     // We then take that data and resolve it our state.\r\n//     fetch(URL)\r\n//       .then(res => {\r\n//         return res.json();\r\n//       })\r\n//       .then(data => {\r\n//         this.setState({ items: data.results });\r\n//       })\r\n//       .catch(err => {\r\n//         throw new Error(err);\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"App\">\r\n//         <h1 className=\"Header\">Solar Magic Item Database</h1>\r\n//         <ItemList  items = {this.state.items}/>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ItemPage;"]},"metadata":{},"sourceType":"module"}