{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Documents\\\\GitHub\\\\solarMIDFrontEnd\\\\solar-mid\\\\src\\\\components\\\\Item.js\";\nimport React, { Component } from 'react'; // get items from online api\n// it's return a json file\n\nclass GetOnlineitems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    // I will use fake api from jsonplaceholder website\n    // this return 100 items \n    fetch(\"http://localhost:5000/api/magicitems\").then(response => response.json()).then( // handle the result\n    result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, // Handle error \n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventdefault();\n    const data = new FormData(event.target);\n    fetch('http://localhost:5000/api/magicitems', {\n      method: 'POST',\n      body: data\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }\n      }, \"Error in loading\");\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 20\n        }\n      }, \"Loading ...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"ol\", {\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        align: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }\n      }, \"Name: \", item.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }\n      }, \"Details: \", item.details), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }\n      }, \"Realm: \", item.realm), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, \"Expires: \", item.expires), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }, \"Written By: \", item.writtenBy), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }\n      }, \"Date Written: \", item.dateWritten), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }, \"Formal Space Total: \", item.formalSpaceTotal), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }\n      }, \"Formal Space Remaining: \", item.formalSpaceRemaining), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }\n      }, \"Last Player: \", item.lastPlayer), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }\n      }, \"Hidden/Masked Detail: \", item.hiddenDetail))))));\n    }\n  }\n\n}\n\nexport default GetOnlineitems;","map":{"version":3,"sources":["C:/Users/Justin/Documents/GitHub/solarMIDFrontEnd/solar-mid/src/components/Item.js"],"names":["React","Component","GetOnlineitems","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","response","json","result","setState","handleSubmit","e","preventdefault","data","FormData","event","target","method","body","render","map","item","id","name","details","realm","expires","writtenBy","dateWritten","formalSpaceTotal","formalSpaceRemaining","lastPlayer","hiddenDetail"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// get items from online api\r\n// it's return a json file\r\nclass GetOnlineitems extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error : null,\r\n            isLoaded : false,\r\n            items : []          \r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        // I will use fake api from jsonplaceholder website\r\n        // this return 100 items \r\n        fetch(\"http://localhost:5000/api/magicitems\")\r\n        .then( response => response.json())\r\n        .then(\r\n            // handle the result\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded : true,\r\n                    items : result\r\n                });\r\n            },\r\n\r\n            // Handle error \r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                })\r\n            },\r\n        )\r\n    }\r\n    \r\n    handleSubmit(e) {\r\n        e.preventdefault();\r\n        const data = new FormData (event.target);\r\n        fetch('http://localhost:5000/api/magicitems', {\r\n          method: 'POST',\r\n          body: data,\r\n        });\r\n    }\r\n    render() {\r\n        const {error, isLoaded, items} = this.state;\r\n\r\n        if(error){\r\n            return <div>Error in loading</div>\r\n        }else if (!isLoaded) {\r\n            return <div>Loading ...</div>\r\n        }else{\r\n            return(\r\n                <div>\r\n                    <ol className=\"item\">\r\n                    {\r\n                        items.map(item => (\r\n                            <li key={item.id} align=\"start\">\r\n                                <div>\r\n                                    <p>Name: {item.name}</p>\r\n                                    <p>Details: {item.details}</p>\r\n                                    <p>Realm: {item.realm}</p>\r\n                                    <p>Expires: {item.expires}</p>\r\n                                    <p>Written By: {item.writtenBy}</p>\r\n                                    <p>Date Written: {item.dateWritten}</p>\r\n                                    <p>Formal Space Total: {item.formalSpaceTotal}</p>\r\n                                    <p>Formal Space Remaining: {item.formalSpaceRemaining}</p>\r\n                                    <p>Last Player: {item.lastPlayer}</p>\r\n                                    <p>Hidden/Masked Detail: {item.hiddenDetail}</p>\r\n                                </div>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                    </ol>\r\n                </div>\r\n            );\r\n        }\r\n      \r\n    }\r\n  }\r\n  \r\n  export default GetOnlineitems;"]},"metadata":{},"sourceType":"module"}