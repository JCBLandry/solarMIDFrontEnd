{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\Documents\\\\GitHub\\\\solarMIDFrontEnd\\\\solar-mid\\\\src\\\\components\\\\Item.js\";\nimport React, { Component } from 'react'; // get items from online api\n// it's return a json file\n\nclass GetOnlineitems extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit.bind(this);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const data = new FormData(form);\n\n    for (let name of data.keys()) {\n      const input = form.elements[name];\n      const parserName = input.dataset.parse;\n\n      if (parserName) {\n        const parser = inputParsers[parserName];\n        const parsedValue = parser(data.get(name));\n        data.set(name, parsedValue);\n      }\n    }\n\n    fetch('/api/form-submit-url', {\n      method: 'POST',\n      body: data\n    });\n  }\n\n  componentDidMount() {\n    // I will use fake api from jsonplaceholder website\n    // this return 100 items \n    fetch(\"http://localhost:5000/api/magicitems\").then(response => response.json()).then( // handle the result\n    result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, // Handle error \n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }\n      }, \"Error in loading\");\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }\n      }, \"Loading ...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"name\",\n        name: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"select\", {\n        name: \"realm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Earth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, \"Earth\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Celestial\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, \"Celestial\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Both\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, \"Both\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Other\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, \"Other\")), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"undefined\",\n        placeholder: \"Expires\",\n        name: \"expires\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"undefined\",\n        placeholder: \"Magical?\",\n        name: \"magical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"undefined\",\n        placeholder: \"Charges\",\n        name: \"charges\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"undefined\",\n        placeholder: \"Details\",\n        name: \"details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"undefined\",\n        placeholder: \"Written By\",\n        name: \"writtenBy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"undefined\",\n        placeholder: \"Date Written\",\n        name: \"dateWritten\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"undefined\",\n        placeholder: \"Formal Space Total\",\n        name: \"formalSpaceTotal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"undefined\",\n        placeholder: \"Formal Space Remaining\",\n        name: \"formalSpaceRemaining\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"undefined\",\n        placeholder: \"Last Player\",\n        name: \"lastplayer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      })), /*#__PURE__*/React.createElement(\"ol\", {\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        align: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, \"Name: \", item.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }\n      }, \"Details: \", item.details), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }\n      }, \"Realm: \", item.realm), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      }, \"Expires: \", item.expires), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 37\n        }\n      }, \"Written By: \", item.writtenBy), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }\n      }, \"Date Written: \", item.dateWritten), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      }, \"Formal Space Total: \", item.formalSpaceTotal), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      }, \"Formal Space Remaining: \", item.formalSpaceRemaining), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 37\n        }\n      }, \"Last Player: \", item.lastPlayer), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }\n      }, \"Hidden/Masked Detail: \", item.hiddenDetail))))));\n    }\n  }\n\n}\n\nexport default GetOnlineitems;","map":{"version":3,"sources":["C:/Users/Justin/Documents/GitHub/solarMIDFrontEnd/solar-mid/src/components/Item.js"],"names":["React","Component","GetOnlineitems","constructor","props","handleSubmit","bind","state","error","isLoaded","items","event","preventDefault","form","target","data","FormData","name","keys","input","elements","parserName","dataset","parse","parser","inputParsers","parsedValue","get","set","fetch","method","body","componentDidMount","then","response","json","result","setState","render","map","item","id","details","realm","expires","writtenBy","dateWritten","formalSpaceTotal","formalSpaceRemaining","lastPlayer","hiddenDetail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACnCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAG,IADC;AAETC,MAAAA,QAAQ,EAAG,KAFF;AAGTC,MAAAA,KAAK,EAAG;AAHC,KAAb;AAKH;;AACDL,EAAAA,YAAY,CAACM,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,MAAnB;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,IAAb,CAAb;;AAEA,SAAK,IAAII,IAAT,IAAiBF,IAAI,CAACG,IAAL,EAAjB,EAA8B;AAC5B,YAAMC,KAAK,GAAGN,IAAI,CAACO,QAAL,CAAcH,IAAd,CAAd;AACA,YAAMI,UAAU,GAAGF,KAAK,CAACG,OAAN,CAAcC,KAAjC;;AAEA,UAAIF,UAAJ,EAAgB;AACd,cAAMG,MAAM,GAAGC,YAAY,CAACJ,UAAD,CAA3B;AACA,cAAMK,WAAW,GAAGF,MAAM,CAACT,IAAI,CAACY,GAAL,CAASV,IAAT,CAAD,CAA1B;AACAF,QAAAA,IAAI,CAACa,GAAL,CAASX,IAAT,EAAeS,WAAf;AACD;AACF;;AAEDG,IAAAA,KAAK,CAAC,sBAAD,EAAyB;AAC5BC,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,IAAI,EAAEhB;AAFsB,KAAzB,CAAL;AAID;;AACHiB,EAAAA,iBAAiB,GAAE;AACf;AACA;AACAH,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACCI,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,EAGI;AACCG,IAAAA,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACV5B,QAAAA,QAAQ,EAAG,IADD;AAEVC,QAAAA,KAAK,EAAG0B;AAFE,OAAd;AAIH,KATL,EAWI;AACC5B,IAAAA,KAAD,IAAW;AACP,WAAK6B,QAAL,CAAc;AACV5B,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAjBL;AAmBH;;AAED8B,EAAAA,MAAM,GAAG;AACL,UAAM;AAAC9B,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA2B,KAAKH,KAAtC;;AAEA,QAAGC,KAAH,EAAS;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH,KAFD,MAEM,IAAI,CAACC,QAAL,EAAe;AACjB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH,KAFK,MAED;AACD,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEV;AAAM,QAAA,QAAQ,EAAE,KAAKJ,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,MAA/B;AAAsC,QAAA,IAAI,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAFA,eAQA;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,WAAW,EAAC,SAApC;AAA8C,QAAA,IAAI,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,eASA;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,WAAW,EAAC,UAApC;AAA+C,QAAA,IAAI,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,eAWA;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,WAAW,EAAC,SAApC;AAA8C,QAAA,IAAI,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXA,eAaA;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,WAAW,EAAC,SAApC;AAA8C,QAAA,IAAI,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbA,eAcA;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,WAAW,EAAC,YAApC;AAAiD,QAAA,IAAI,EAAC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdA,eAeA;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,WAAW,EAAC,cAApC;AAAmD,QAAA,IAAI,EAAC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfA,eAgBA;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,WAAW,EAAC,oBAApC;AAAyD,QAAA,IAAI,EAAC,kBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBA,eAiBA;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,WAAW,EAAC,wBAApC;AAA6D,QAAA,IAAI,EAAC,sBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBA,eAkBA;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,WAAW,EAAC,aAApC;AAAkD,QAAA,IAAI,EAAC,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBA,eAoBA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBA,CAFU,eAwBI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIK,KAAK,CAAC6B,GAAN,CAAUC,IAAI,iBACV;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,QAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUD,IAAI,CAACvB,IAAf,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAauB,IAAI,CAACE,OAAlB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWF,IAAI,CAACG,KAAhB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaH,IAAI,CAACI,OAAlB,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgBJ,IAAI,CAACK,SAArB,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkBL,IAAI,CAACM,WAAvB,CANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAwBN,IAAI,CAACO,gBAA7B,CAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA4BP,IAAI,CAACQ,oBAAjC,CARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiBR,IAAI,CAACS,UAAtB,CATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA0BT,IAAI,CAACU,YAA/B,CAVJ,CADJ,CADJ,CAFJ,CAxBJ,CADJ;AA+CH;AAEJ;;AAhHkC;;AAmHrC,eAAehD,cAAf","sourcesContent":["import React, { Component } from 'react';\r\n// get items from online api\r\n// it's return a json file\r\nclass GetOnlineitems extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit.bind(this)\r\n        this.state = {\r\n            error : null,\r\n            isLoaded : false,\r\n            items : []          \r\n        };\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const form = event.target;\r\n        const data = new FormData(form);\r\n    \r\n        for (let name of data.keys()) {\r\n          const input = form.elements[name];\r\n          const parserName = input.dataset.parse;\r\n    \r\n          if (parserName) {\r\n            const parser = inputParsers[parserName];\r\n            const parsedValue = parser(data.get(name));\r\n            data.set(name, parsedValue);\r\n          }\r\n        }\r\n        \r\n        fetch('/api/form-submit-url', {\r\n          method: 'POST',\r\n          body: data,\r\n        });\r\n      }\r\n    componentDidMount(){\r\n        // I will use fake api from jsonplaceholder website\r\n        // this return 100 items \r\n        fetch(\"http://localhost:5000/api/magicitems\")\r\n        .then( response => response.json())\r\n        .then(\r\n            // handle the result\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded : true,\r\n                    items : result\r\n                });\r\n            },\r\n\r\n            // Handle error \r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                })\r\n            },\r\n        )\r\n    }\r\n  \r\n    render() {\r\n        const {error, isLoaded, items} = this.state;\r\n\r\n        if(error){\r\n            return <div>Error in loading</div>\r\n        }else if (!isLoaded) {\r\n            return <div>Loading ...</div>\r\n        }else{\r\n            return(\r\n                <div>\r\n                    \r\n      <form onSubmit={this.handleSubmit}>\r\n      <input type=\"text\" placeholder=\"name\" name=\"name\" />\r\n      <select name=\"realm\">\r\n        <option value=\"Earth\">Earth</option>\r\n        <option value=\"Celestial\">Celestial</option>\r\n        <option value=\"Both\">Both</option>\r\n        <option value=\"Other\">Other</option>\r\n      </select>\r\n      <input type=\"undefined\" placeholder=\"Expires\" name=\"expires\"  />\r\n      <input type=\"undefined\" placeholder=\"Magical?\" name=\"magical\"  />\r\n      {/* <input type=\"undefined\" placeholder=\"number\" name=\"number\"  /> */}\r\n      <input type=\"undefined\" placeholder=\"Charges\" name=\"charges\"  />\r\n      {/* <input type=\"undefined\" placeholder=\"chargeLikeDetail\" name=\"chargeLikeDetail\"  /> */}\r\n      <input type=\"undefined\" placeholder=\"Details\" name=\"details\"  />\r\n      <input type=\"undefined\" placeholder=\"Written By\" name=\"writtenBy\"  />\r\n      <input type=\"undefined\" placeholder=\"Date Written\" name=\"dateWritten\"  />\r\n      <input type=\"undefined\" placeholder=\"Formal Space Total\" name=\"formalSpaceTotal\"  />\r\n      <input type=\"undefined\" placeholder=\"Formal Space Remaining\" name=\"formalSpaceRemaining\"  />\r\n      <input type=\"undefined\" placeholder=\"Last Player\" name=\"lastplayer\"  />\r\n\r\n      <input type=\"submit\" />\r\n    </form>\r\n                    <ol className=\"item\">\r\n                    {\r\n                        items.map(item => (\r\n                            <li key={item.id} align=\"start\">\r\n                                <div>\r\n                                    <p>Name: {item.name}</p>\r\n                                    <p>Details: {item.details}</p>\r\n                                    <p>Realm: {item.realm}</p>\r\n                                    <p>Expires: {item.expires}</p>\r\n                                    <p>Written By: {item.writtenBy}</p>\r\n                                    <p>Date Written: {item.dateWritten}</p>\r\n                                    <p>Formal Space Total: {item.formalSpaceTotal}</p>\r\n                                    <p>Formal Space Remaining: {item.formalSpaceRemaining}</p>\r\n                                    <p>Last Player: {item.lastPlayer}</p>\r\n                                    <p>Hidden/Masked Detail: {item.hiddenDetail}</p>\r\n                                </div>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                    </ol>\r\n                </div>\r\n            );\r\n        }\r\n      \r\n    }\r\n  }\r\n  \r\n  export default GetOnlineitems;"]},"metadata":{},"sourceType":"module"}